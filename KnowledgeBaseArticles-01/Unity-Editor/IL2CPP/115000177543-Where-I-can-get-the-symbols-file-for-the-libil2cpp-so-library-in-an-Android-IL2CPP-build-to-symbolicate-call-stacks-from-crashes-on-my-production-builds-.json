[{"title":"Where I can get the symbols file for the libil2cpp.so library in an Android (IL2CPP) build to symbolicate call stacks from crashes on my production builds?","authorName":"Sergio Gomez.","createdDate":"2017-01-03T16:02:53Z","updatedDate":"2017-05-09T06:51:33Z","labels":["Android","IL2CPP","symbols","crash","libil2cpp.so"],"sections":[{"title":"Symptoms","content":["I want to symbolicate a call stack from a crash that happened on my Android (IL2CPP) production build in libil2cpp.so, but I have been unable to find the symbols for that library."]},{"title":"The symbols files are created for each build in the ProjectFolder/Temp/ directory and removed when the Editor application is exited, which is why you may not have seen them. Resolution","content":["You can get the symbols from the following locations after each build:","\n<li><em>ProjectFolder\\Temp\\StagingArea\\libs\\x86\\libil2cpp.so.debug</em></li>\n<li><em>ProjectFolder\\Temp\\StagingArea\\libs\\armeabi-v7a\\libil2cpp.so.debug</em></li>\n","Make sure to not close the Unity Editor before copying the symbols files to a different folder.","You can also use a post-process build script like the one below:","using UnityEngine;\nusing System.Collections;\nusing UnityEditor.Callbacks;\nusing UnityEditor;\nusing System.IO;\nusing System;\n\npublic class MyBuildPostprocessor  <br>{\n        [PostProcessBuildAttribute()]\n        public static void OnPostprocessBuild(BuildTarget target, string pathToBuiltProject)\n        {\n                if (target == BuildTarget.Android)\n    \t\t        PostProcessAndroidBuild(pathToBuiltProject);\n        }\n\n        public static void PostProcessAndroidBuild(string pathToBuiltProject)\n        {\n                UnityEditor.ScriptingImplementation backend = UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.BuildTargetGroup.Android) as UnityEditor.ScriptingImplementation;\n\n                if (backend == UnityEditor.ScriptingImplementation.IL2CPP)\n                {\n                        CopyAndroidIL2CPPSymbols(pathToBuiltProject, PlayerSettings.Android.targetDevice);\n                }\n        }\n\n        public static void CopyAndroidIL2CPPSymbols(string pathToBuiltProject, AndroidTargetDevice targetDevice)\n        {\n                string buildName = Path.GetFileNameWithoutExtension(pathToBuiltProject);\n                FileInfo fileInfo = new FileInfo(pathToBuiltProject);\n                string symbolsDir = fileInfo.Directory.Name;\n                symbolsDir = symbolsDir + &quot;/&quot;+buildName+&quot;_IL2CPPSymbols&quot;;\n\n                CreateDir(symbolsDir);\n\n                switch (PlayerSettings.Android.targetDevice)\n                {\n                      case AndroidTargetDevice.FAT:\n                        {\n                            CopyARMSymbols(symbolsDir);\n                            CopyX86Symbols(symbolsDir);\n                            break;\n                        }\n                      case AndroidTargetDevice.ARMv7:\n                        {\n                            CopyARMSymbols(symbolsDir);\n                            break;\n                        }\n                      case AndroidTargetDevice.x86:\n                        {\n                            CopyX86Symbols(symbolsDir);\n                            break;\n                        }\n                      default:\n                      break;\n                }\n        }\n\n\n        const string libpath = &quot;/../Temp/StagingArea/libs/&quot;;\n        Const string libFilename = &quot;libil2cpp.so.debug&quot;;\n        private static void CopyARMSymbols(string symbolsDir)\n        {\n                string sourcefileARM = Application.dataPath + libpath + &quot;armeabi-v7a/&quot; + libFilename;\n                CreateDir(symbolsDir + &quot;/armeabi-v7a/&quot;);\n                File.Copy(sourcefileARM, symbolsDir + &quot;/armeabi-v7a/libil2cpp.so.debug&quot;);\n        }\n\n        private static void CopyX86Symbols(string symbolsDir)\n        {\n                string sourcefileX86 = Application.dataPath + libpath + &quot;x86/libil2cpp.so.debug&quot;;\n                File.Copy(sourcefileX86, symbolsDir + &quot;/x86/libil2cpp.so.debug&quot;);\n        }\n\n        public static void CreateDir(string path)\n        {\n                if (Directory.Exists(path))\n                    return;\n\n                Directory.CreateDirectory(path);\n        }\n}&#xA0;"]},{"title":"More Information","content":["For more information, consult the following documentation:","\n<li><a href=\"https://blogs.unity3d.com/es/2015/05/06/an-introduction-to-ilcpp-internals/\">An introduction to IL2CPP internals&#xA0;</a></li>\n<li><a href=\"https://support.unity3d.com/hc/en-us/articles/210141723-How-can-I-get-symbols-in-Instruments-during-profiling-\">How can I get symbols in Instruments during profiling?</a></li>\n<li><a href=\"https://support.unity3d.com/hc/en-us/articles/208593736-How-can-I-symbolicate-iOS-crash-logs-from-projects-generated-with-Cloud-Build-\">How can I symbolicate iOS crash logs from Projects generated with Cloud Build?</a></li>\n<li><a href=\"https://support.unity3d.com/hc/en-us/articles/208593516-How-to-symbolicate-iOS-tvOS-crashlogs\">How to symbolicate iOS and tvOS crash logs</a></li>\n<li><a href=\"https://support.unity3d.com/hc/en-us/articles/205485376-How-do-you-debug-on-Android-\">How do you debug on Android?</a></li>\n<li><a href=\"https://docs.unity3d.com/Manual/IL2CPP.html\">IL2CPP documentation</a></li>\n"]}]}]