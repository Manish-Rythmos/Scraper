[{"title":"How to customize Unity script templates","authorName":"Iain Gilfeather.","createdDate":"2016-05-04T10:00:07Z","updatedDate":"2017-04-05T16:17:00Z","labels":["Editor","UnityScript","C#","Templates"],"sections":[{"title":"\nSymptoms\n\n\nWhen I create a new script, the Unity Editor generates its content. For C# scripts it uses the file name as the class name.\n\n\nCause\n \nScripts templates are stored in %EDITOR_PATH%\\Data\\Resources\\ScriptTemplates.\n \nResolution\n\nWhen you are creating a new script, the Unity Editor generates its content. For C# scripts it uses the file name as the class name. Please see the example below:\n\nusing UnityEngine;\nusing System.Collections;\n\npublic class MyCustomScript : MonoBehaviour {\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\n\t}\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\t\n\t}\n}\n\n\nIf you want to change the initial script, you can modify the script templates stored here:\n\n\nWindows: C:\\Program Files\\Unity\\Editor\\Data\\Resources\\ScriptTemplates\nMac: /Applications/Unity/Editor/Data/Resources/ScriptTemplates\nMac (since 5.2.1f1): /Applications/Unity/Unity.app/Contents/Resources/ScriptTemplates\n\nIn this directory you will find several template files:\n\n81-C# Script-NewBehaviourScript.cs.txt\n82-Javascript-NewBehaviourScript.js.txt\n83-Shader__Standard Surface Shader-NewSurfaceShader.shader.txt\n84-Shader__Unlit Shader-NewUnlitShader.shader.txt\n...\n\n\n\n\n \n\nIf you would like to have a different C# script template just edit the 81-C# Script-NewBehaviourScript.cs.txt file and leave the rest as it is.\nThe mentioned file content looks like this (by default):\n\nusing UnityEngine;\nusing System.Collections;\n \npublic class #SCRIPTNAME# : MonoBehaviour {\n \n\t// Use this for initialization\n\tvoid Start () {\n\t\n\t}\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\t\n\t}\n}\n\n\n \n\nYou can change anything you want within the script, but remember to leave #SCRIPTNAME# where it is. Without it, your template class name will not change and a new script file will be generated with an incorrect class name.\nHere is an example how the modified C# template may look: \n\n/*\n * Modified template by Unity Support.\n */\n \nusing UnityEngine;\n \npublic class #SCRIPTNAME# : MonoBehaviour\n{\n    #region Public Fields\n    #endregion\n \n    #region Unity Methods\n    void Start()\n    {\n    }\n \n    void Update()\n    {\n    }\n    #endregion\n \n    #region Private Methods\n    #endregion\n}\n\n\n\n \n\nAfter modifying the template files, please relaunch your Unity Editor to apply these changes.\nBe sure to back up your original template files and the modified ones. Original files will be needed if your template is not recognized correctly – you will have to start again if that happens. Make a copy of your modified template somewhere outside the Unity directory. When you upgrade your Unity version, the template files will be overwritten and you will need to copy and replace these again with your custom templates.\n\nMore Information\n \nhttp://blog.theknightsofunity.com/customize-unity-script-templates/\n \n \n","content":[]}]}]