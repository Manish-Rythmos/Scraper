[{"title":"Why I can't unload Assets that were referenced by scripts which were also referenced by UI events?","authorName":"Sergio Gomez.","createdDate":"2017-01-04T16:58:33Z","updatedDate":"2017-02-01T15:25:34Z","labels":["UI","events","reference","destroy object","unload Asset"],"sections":[{"title":"Symptoms","content":["I am destroying a GameObject and calling <strong>Resources.UnloadUnusedAssets()</strong> to unload Assets but I can see that the Assets remain in memory."]},{"title":"Cause","content":["UI events hold strong references to objects. This means they will prevent the object they reference from being garbage collected.","For example, if you have a GameObject with the following script (which holds a reference to a Texture):","using UnityEngine;\n\npublic class MyScript : MonoBehaviour {\n\n     public Texture2D texture;\n\n     public void Foo()\n     {\n\n     }\n}\n","And you have a button that uses an on-click event to trigger a function in <strong>MyScript</strong> (as shown below), you must then destroy the GameObject using <a href=\"https://docs.unity3d.com/ScriptReference/Object.Destroy.html\"><strong>GameObject.Destroy(gameObject)</strong></a> and call <strong><a href=\"https://docs.unity3d.com/ScriptReference/Resources.html\">Resources</a>.<a href=\"https://docs.unity3d.com/ScriptReference/Resources.UnloadUnusedAssets.html\">UnloadUnusedAssets</a></strong>.","<img src=\"/hc/en-us/article_attachments/115000721243/Screenshot.png\" alt=\"\">","If you check the Memory Profiler you will see that, after calling <strong>Resources.UnloadUnusedAssets</strong>, the Texture remains in memory. This is because the UI event holds a reference to the script and prevents the Texture from being released."]},{"title":"Resolution","content":["A simple solution to this problem is to set the reference to <strong>null</strong> in a DestroySelf function that can be called to destroy the GameObject as shown below:","   void DestroySelf()\n   {\n        texture = null;  // remove the reference\n        GameObject.Destroy(gameObject);\n   }\n","Then, after calling <strong>Resources.UnloadUnusedAssets</strong>, the Texture should be released."]},{"title":"More Information","content":["You may find the following documentation helpful:","\n<li><a href=\"https://docs.unity3d.com/ScriptReference/Resources.UnloadUnusedAssets.html\">Documentation on Resources.UnloadUnusedAssets</a></li>\n<li><a href=\"https://docs.unity3d.com/ScriptReference/Resources.UnloadAsset.html\">Documentation on Resources.UnloadAsset</a></li>\n<li><a href=\"https://docs.unity3d.com/ScriptReference/EventSystems.EventTrigger.html\">Documentation on EventTrigger</a></li>\n<li><a href=\"https://docs.unity3d.com/Manual/EventSystem.html\">Documentation on Event System</a></li>\n","Additionally, you may also find the below tutorials useful:","\n<li><a href=\"https://unity3d.com/learn/tutorials/topics/user-interface-ui/ui-button?playlist=17111\">Tutorial on UI buttons</a></li>\n<li><a href=\"https://unity3d.com/learn/tutorials/topics/user-interface-ui/ui-events-and-event-triggers\">Tutorial on UI events and event triggers</a></li>\n"]}]}]